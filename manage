#! /bin/bash

function print_help {
  echo "usage:"
  echo "    ./manage [makemigrations|migrate|clean|rebuild|run|stop]"
}

[[ $# -ne 1 ]] && print_help && exit

cmd=$1
apps=("account" "announcement" "conf" "contest" "options" "problem" "submission")
supervisor_cmd="supervisord -c ./deploy/supervisord.conf"

function clean {
  rm -rf ./data/zips
  rm -rf ./data/problems
  rm -rf ./data/submissions
  find . -type d -name 'migrations' -not -path './venv/*' | xargs rm -r;
  rm onl.db
  docker rm -f oj-redis-dev
}

function migrate {
  for app in "${apps[@]}"; do
    python3 manage.py makemigrations $app
  done
  python3 manage.py migrate
  python3 manage.py inituser --username=root --password=rootroot --action=create_super_admin
}

function run_onl {
  [[ ! -d data/log ]] && mkdir -p data/log && echo 'mkdir data/log'
  [[ -z $FRONTEND ]] && echo "environment variable FRONTEND is not set" && return 1

  if ! command which python3 | grep venv > /dev/null; then
    source venv/bin/activate
  fi


  export TARGET=http://127.0.0.1:7890
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
  nvm use v8.12.0
  workdir=$(pwd)
  process_num=$(($(nproc) * 2 - 1))

  # run onl
  if ! command pgrep -f "$supervisor_cmd" > /dev/null; then
    echo "running onl controller ..."
    FRONTEND=$FRONTEND WORKDIR=$workdir MAX_WORKER_NUM=$process_num $supervisor_cmd > /dev/null &
    [[ $? -ne 0 ]] && echo "Error: fail to run onl"
  else
    echo "onl is already running"
  fi
  return 0
}

function stop_onl {
  pkill -f "$supervisor_cmd"
  [[ $? -eq 0 ]] && echo "stop supervisord"
}

case $cmd in
  "make" | "makemigrations" )
    for app in "${apps[@]}"; do
      python3 manage.py makemigrations $app
    done
    ;;
  "migrate" )
    migrate
    ;;
  "clean" )
    clean
    ;;
  "rebuild" )
    clean
    migrate
    ;;
  "run" )
    run_onl
    ;;
  "stop" )
    stop_onl
    ;;
  * )
    echo "unknown commmand: $cmd"
    print_help
    ;;
esac
